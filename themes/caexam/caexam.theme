<?php

use Drupal\user\Entity\User;

function caexam_preprocess_taxonomy_term(&$vars) {
  $vars['custom_desc'] = $vars['content']['description'];
  $count = 1;
  $index = 0;
  $array_set = 0;
  foreach ($vars['content']['field_image_link']['#items'] as $key => $item) {
    if($vars['term']->id() != 2) {
    	if($count < 3) {
    		$item = $item->value;
  		  $fc = \Drupal\field_collection\Entity\FieldCollectionItem::load($item);	  
    		$vars['custom_img_link'][$array_set][$key]['url'] = '/node/' . $fc->get('field_landing_page')->getString();
    		$vars['custom_img_link'][$array_set][$key]['img'] = file_create_url($fc->get('field_image')->entity->uri->value);
    		$vars['custom_img_link'][$array_set][$key]['key'] = $index;
    		$count++;
    	}
    	else {
    		$item = $item->value;
  		  $fc = \Drupal\field_collection\Entity\FieldCollectionItem::load($item);	  
    		$vars['custom_img_link'][$array_set][$key]['url'] = '/node/' . $fc->get('field_landing_page')->getString();
    		$vars['custom_img_link'][$array_set][$key]['img'] = file_create_url($fc->get('field_image')->entity->uri->value);
    		$vars['custom_img_link'][$array_set][$key]['key'] = $index;
    		$array_set++;
    		$count = 1;
    	}
    	$index++;
    }
    else {
      if($count < 4) {
        $item = $item->value;
        $fc = \Drupal\field_collection\Entity\FieldCollectionItem::load($item);   
        $vars['custom_img_link'][$array_set][$key]['url'] = '/node/' . $fc->get('field_landing_page')->getString();
        $vars['custom_img_link'][$array_set][$key]['img'] = file_create_url($fc->get('field_image')->entity->uri->value);
        $vars['custom_img_link'][$array_set][$key]['key'] = $index;
        $count++;
      }
      else {
        $item = $item->value;
        $fc = \Drupal\field_collection\Entity\FieldCollectionItem::load($item);   
        $vars['custom_img_link'][$array_set][$key]['url'] = '/node/' . $fc->get('field_landing_page')->getString();
        $vars['custom_img_link'][$array_set][$key]['img'] = file_create_url($fc->get('field_image')->entity->uri->value);
        $vars['custom_img_link'][$array_set][$key]['key'] = $index;
        $array_set++;
        $count = 1;
      }
      $index++;
    }
  }
}

function caexam_preprocess_form(&$vars) {
  $vars['contact_title'] = $vars['element']['#title'];
  //echo "<pre>";print_r($vars['element']['#title']);exit;
}

function caexam_theme_suggestions_form_alter(array &$suggestions, array $variables) {
  if($variables['element']['#id'] == 'contact-message-feedback-form') {
    $suggestions[] = 'form__' . 'contact';
  }
}

function caexam_preprocess_region(&$vars) {
  $current_path = \Drupal::service('path.current')->getPath(); // Gets internal path - for eg /node/29.
  // Retrieve an array which contains the path pieces.
  $pathArgs = explode('/', $current_path);
  $vars['path_arg'] = $pathArgs[1];

  $node = \Drupal::routeMatch()->getParameter('node');
  if ($node instanceof \Drupal\node\NodeInterface) {
    $vars['node_type'] = $node->getType();
  }
}

function caexam_preprocess_html(&$vars) {
  $current_path = \Drupal::service('path.current')->getPath(); // Gets internal path - for eg /node/29.
  // Retrieve an array which contains the path pieces.
  $pathArgs = explode('/', $current_path);
  $vars['path_arg'] = $pathArgs[1];
  $vars['path_arg1'] = $pathArgs[2];
}

function caexam_preprocess_page(&$vars) {
  $current_path = \Drupal::service('path.current')->getPath(); // Gets internal path - for eg /node/29.
  // Retrieve an array which contains the path pieces.
  $pathArgs = explode('/', $current_path);
  $vars['path_arg'] = $pathArgs[1];
  $vars['is_anonymous'] = FALSE;

  if(\Drupal::currentUser()->isAnonymous()) {
    $vars['is_anonymous'] = TRUE;
  }
  else {
    $account = User::load(\Drupal::currentUser()->id());
    $vars['fname'] = $account->get('field_first_name')->value;
    $vars['lname'] = $account->get('field_last_name')->value;
    $vars['mail'] = $account->get('mail')->value;
    $vars['uid'] = \Drupal::currentUser()->id();
  }

  if (\Drupal::currentUser()->isAuthenticated() && in_array('user', $pathArgs) && in_array('edit', $pathArgs)) {
    if(empty($account)) {
      $account = User::load(\Drupal::currentUser()->id());
    }
    $vars['fname'] = $account->get('field_first_name')->value;
    $vars['lname'] = $account->get('field_last_name')->value;
    $vars['mail'] = $account->get('mail')->value;
    $vars['phone'] = $account->get('field_mobile_number')->value;
    $vars['dob'] = $account->get('field_date_of_birth')->value;
    $vars['gender'] = $account->get('field_gender')->value;
    $vars['course'] = $account->get('field_course')->value;
    $vars['pincode'] = $account->get('field_pincode')->value;
    $vars['city'] = $account->get('field_city')->value;
    $vars['state'] = $account->get('field_state')->value;
    $vars['role'] = $account->getRoles();

    if (in_array('professor', $vars['role'])) {
      $vars['work'] = $account->get('field_work')->value;
      $vars['subjects'] = $account->get('field_subjects')->value;
    }
  }

  if(\Drupal::service('path.matcher')->isFrontPage()) {
    // Get all content.
    $query = \Drupal::entityQuery('node')
      ->condition('type', 'front_page_description')
      ->condition('status', 1);
    $result = $query->execute();
    if(!empty($result)) {
      $front_content = \Drupal\node\Entity\Node::loadMultiple($result);
      $front_content = reset($front_content);
      $vars['front_content_title'] = $front_content->get('title')->value;
      $vars['front_content_body'] = $front_content->get('body')->value;
    }
  }
  
  if($vars['path_arg'] == 'questions') {
    $vid = 'exam';
    $terms =\Drupal::entityTypeManager()->getStorage('taxonomy_term')->loadTree($vid);
    foreach ($terms as $term) {
     $vars['exam'][$term->tid] = array(
      'name' => $term->name
     );
    }
    $vid = 'author';
    $terms =\Drupal::entityTypeManager()->getStorage('taxonomy_term')->loadTree($vid);
    foreach ($terms as $term) {
     $vars['author'][$term->tid] = array(
      'name' => $term->name
     );
    }
    $vid = 'year_of_plublication';
    $terms =\Drupal::entityTypeManager()->getStorage('taxonomy_term')->loadTree($vid);
    foreach ($terms as $term) {
     $vars['year'][$term->tid] = array(
      'name' => $term->name
     );
    }
    $vid = 'subject';
    $terms =\Drupal::entityTypeManager()->getStorage('taxonomy_term')->loadTree($vid);
    foreach ($terms as $term) {
     $vars['subject'][$term->tid] = array(
      'name' => $term->name
     );
    }
    $vid = 'topic';
    $terms =\Drupal::entityTypeManager()->getStorage('taxonomy_term')->loadTree($vid);
    foreach ($terms as $term) {
     $vars['topic'][$term->tid] = array(
      'name' => $term->name
     );
    }
    $vid = 'attempt';
    $terms =\Drupal::entityTypeManager()->getStorage('taxonomy_term')->loadTree($vid);
    foreach ($terms as $term) {
     $vars['attempt'][$term->tid] = array(
      'name' => $term->name
     );
    }
    // Get all content related to questions.
    $query = \Drupal::entityQuery('node')
      ->condition('type', 'question')
      ->condition('status', 1);
    $result = $query->execute();
    if(!empty($result)) {
      $questions = \Drupal\node\Entity\Node::loadMultiple($result);
      foreach ($questions as $nid => $question) {
        $vars['questions'][$nid]['title'] = $question->get('title')->value;
        $vars['questions'][$nid]['solution'] = $question->get('body')->value;
        $vars['questions'][$nid]['video_solution'] = $question->get('field_video_solution')->value;
      }
    }
  }
}

function caexam_preprocess_node(&$vars) {
  //$statistics = statistics_get($vars['node']->id());
  //$vars['node_stats'] = \Drupal::translation()->formatPlural($statistics['totalcount'], '1 view', '@count');
}

 /**
 * Implements hook_theme_suggestions_HOOK_alter().
 */
function caexam_theme_suggestions_page_alter(array &$suggestions, array $variables) {
  $request = \Drupal::routeMatch()->getRouteObject();
  $path_args = explode('/', $request->getPath());
  if (\Drupal::currentUser()->isAuthenticated() && in_array('user', $path_args) && in_array('edit', $path_args)) {
    $suggestions[] = 'page__user__profile__edit';
  }
  if (in_array('node', $path_args)) {
    $node = \Drupal::routeMatch()->getParameter('node');
    if ($node instanceof \Drupal\node\NodeInterface) {
      $suggestions[] = 'page__' . $node->bundle();
    }
  }
}